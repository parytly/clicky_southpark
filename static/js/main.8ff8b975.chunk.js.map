{"version":3,"sources":["components/CharacterCard/index.js","components/Title/index.js","components/Navbar/index.js","App.js","index.js"],"names":["CharacterCard","props","className","key","id","value","name","onClick","e","clickValue","shuffle","score","alt","src","image","width","height","Title","NavBar","loser","App","state","characters","userSelect","status","handleClick","preventDefault","target","console","log","setState","scoring","game","x","Set","size","length","resetGame","sort","a","b","Math","random","this","map","character","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yjFAaeA,MAVf,SAAuBC,GACnB,OACI,yBAAKC,UAAU,aAAaC,IAAOF,EAAMG,IACrC,4BAAQF,UAAU,SAASG,MAAOJ,EAAMK,KAAMC,QAAW,SAACC,GAAOP,EAAMQ,WAAWD,GAAIP,EAAMS,UAAUT,EAAMU,UACxG,yBAAKL,KAAML,EAAMK,KAAMM,IAAOX,EAAMK,KAAMO,IAAKZ,EAAMa,MAAOC,MAAM,MAAMC,OAAO,W,qBCOhFC,MAXf,SAAehB,GACX,OACI,yBAAKC,UAAU,6BACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,aAAd,mBACA,uBAAGA,UAAU,QAAb,6K,MCODgB,MAZf,SAAgBjB,GACZ,OACI,yBAAKC,UAAU,mDACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,IAAd,eACZ,wBAAIA,UAAU,UAAd,IAAyBD,EAAMkB,MAA/B,KACY,uCAAY,8BAAOlB,EAAMU,WCsF1BS,E,2MArFbC,MAAQ,CACNC,aACAX,MAAO,EACPY,WAAY,GACZC,OAAQ,I,EAIVC,YAAc,SAACjB,GACbA,EAAEkB,iBACF,IAAMjB,EAAaD,EAAEmB,OAAOrB,KAC5BsB,QAAQC,IAAI,EAAKR,MAAME,YAEvBK,QAAQC,IAAI,kBAAoBpB,GAEhC,EAAKqB,SAAS,CAACP,WAAW,GAAD,mBAAM,EAAKF,MAAME,YAAjB,CAA6Bd,O,EAKxDsB,QAAU,WACR,EAAKD,SAAU,CAACN,OAAQ,KAGxB,IAAMQ,EAAO,SAACC,GACZ,OAAO,IAAIC,IAAID,GAAGE,OAASF,EAAEG,QAG9BR,QAAQC,IAAIG,EAAK,EAAKX,MAAME,cAGO,IAAhCS,EAAK,EAAKX,MAAME,aACjB,EAAKc,YACL,EAAKP,SAAU,CAACN,OAAQ,uBACM,KAArB,EAAKH,MAAMV,OACrB,EAAK0B,YACL,EAAKP,SAAU,CAACN,OAAQ,eAGxB,EAAKM,SAAS,CAAEnB,MAAO,EAAKU,MAAMV,MAAO,K,EAK7C0B,UAAW,WACT,EAAKP,SAAU,CAACnB,MAAO,IACvB,EAAKmB,SAAU,CAACP,WAAY,M,EAG9Bb,QAAU,WACR,IAAMY,EAAa,EAAKD,MAAMC,WAAWgB,MAAK,SAASC,EAAGC,GACxD,MAAO,GAAMC,KAAKC,YAGpBd,QAAQC,IAAIP,GACZ,EAAKQ,SAAU,CAACR,gB,wEAIR,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,CACAX,MAASgC,KAAKtB,MAAMV,MACpBQ,MAASwB,KAAKtB,MAAMG,SACpB,kBAAC,EAAD,MACA,yBAAKtB,UAAU,qBACb,yBAAKA,UAAU,MAAOC,IAAOwC,KAAKtB,MAAMC,WAAWlB,IAChDuC,KAAKtB,MAAMC,WAAWsB,KAAI,SAAAC,GAAS,OAClC,kBAAE,EAAF,CACE1C,IAAO0C,EAAUzC,GACjBK,WAAc,EAAKgB,YACnBf,QAAW,EAAKA,QAChBJ,KAAMuC,EAAUvC,KAChBQ,MAAO+B,EAAU/B,MACjBH,MAAS,EAAKoB,oB,GA7EZe,IAAMC,WCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8ff8b975.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction CharacterCard(props) {\n    return (        \n        <div className='card col-4' key = {props.id}>\n            <button className=\"button\" value={props.name} onClick = {(e) => {props.clickValue(e); props.shuffle();props.score() }}>\n                <img name={props.name} alt = {props.name} src={props.image} width='100' height='100' />\n            </button>\n        </div>\n    );\n}\n\nexport default CharacterCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container title\">\n                <h1 className=\"display-4\">The Clicky Game</h1>\n                <p className=\"lead\">Clicking on a South Park character will shuffle all the characters around. Don't click on the same character twice, or you will lose. So lets see how far you can get.</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Title;","import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar(props) {\n    return (\n        <nav className=\"navbar sticky-top navbar-expand-lg navbar-light\">\n            <div className=\"container\">\n                <h3 className=\"\">Clicky Game</h3>\n    <h3 className=\"result\"> {props.loser} </h3>\n                <h3> Score: <span>{props.score}</span></h3>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;","import React from 'react';\nimport CharacterCard from \"./components/CharacterCard\";\nimport './App.css';\nimport characters from \"./characters.json\";\nimport Title from \"./components/Title\"\nimport NavBar from \"./components/Navbar\"\n\n\nclass App extends React.Component {\n  \n  state = {\n    characters,\n    score: 0,\n    userSelect: [],\n    status: \"\"\n  }\n\n  // handles the user's clicks\n  handleClick = (e) => {\n    e.preventDefault();\n    const clickValue = e.target.name;\n    console.log(this.state.userSelect)\n    \n    console.log(\"You clicked on \" + clickValue); \n    \n    this.setState({userSelect: [...this.state.userSelect, clickValue]})\n    \n  }\n\n  // Keep the score of the game\n  scoring = () => {\n    this.setState( {status: \"\" })\n\n    // check if there is duplicate in the array\n    const game = (x) => {\n      return new Set(x).size !== x.length\n     }\n    //  logs true/ false\n     console.log(game(this.state.userSelect))\n    \n     //  if there is duplicate in array, reset game\n     if(game(this.state.userSelect) === true) {\n       this.resetGame()\n       this.setState( {status: \"Sorry you lose!!!\" });\n     } else if (this.state.score === 15) {\n      this.resetGame();\n      this.setState( {status: \"Winner!!!\" });\n     }\n     else {\n      this.setState({ score: this.state.score +1 });\n     }\n  }\n  \n  // Function to reset the game\n  resetGame =() => {\n    this.setState( {score: 0} )\n    this.setState( {userSelect: [] })  }\n\n  // Function to shuffle the characters once clicked on\n  shuffle = () => {\n    const characters = this.state.characters.sort(function(a, b) {\n      return 0.5 - Math.random()\n       \n    });\n    console.log(characters)\n    this.setState( {characters} ); \n  };\n\n\n  render() {\n    return (\n      <>\n        <NavBar \n        score = {this.state.score}\n        loser = {this.state.status} />\n        <Title />\n        <div className='container wrapper'>\n          <div className='row'  key = {this.state.characters.id}>\n            {this.state.characters.map(character => (\n              < CharacterCard\n                key = {character.id}\n                clickValue = {this.handleClick}\n                shuffle = {this.shuffle}\n                name={character.name}\n                image={character.image}\n                score = {this.scoring}\n              />\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}